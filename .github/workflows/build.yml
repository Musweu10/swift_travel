# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Build

on:
  push:
    branches:
      - master

jobs:
  build-web:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    name: Build web
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Clone dependencies
        run: |
          git clone https://gaetschwartz:${{ secrets.ACCESS_TOKEN }}@github.com/gaetschwartz/utils.git
          git clone https://gaetschwartz:${{ secrets.ACCESS_TOKEN }}@github.com/vincenttarrit/vibration.git
        working-directory: ../
      - name: Get latest Flutter release
        id: release_json
        run: echo "::set-output name=json::$(curl -s "https://storage.googleapis.com/flutter_infra/releases/releases_linux.json" | jq -r ".current_release.${{ env.flutter_channel }}")"
      - name: Get Flutter from cache
        uses: actions/cache@v2
        with:
          path: |
            /opt/hostedtoolcache/flutter
            $HOME/.pub-cache
          key: ${{ runner.OS }}-flutter-cache-${{ steps.release_json.outputs.json }}
      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: dev
      - name: Get git infos
        id: git-data
        run: |
          echo "::set-output name=hash::$(git rev-parse --short "$GITHUB_SHA")"
          echo "::set-output name=msg::$(git log -1 --pretty=format:"%s")"
          echo "::set-output name=count::$(git rev-list --count HEAD)"
      - name: Get dependencies
        run: |
          flutter config --enable-web
          flutter packages get
      - name: Pre-build configuration
        env:
          TZ: Europe/Zurich
          COMMIT_COUNT: ${{ steps.git-data.outputs.count }}
          GIT_MSG: ${{ steps.git-data.outputs.msg }}
          GIT_HASH: ${{ steps.git-data.outputs.hash }}
        run: bash CI/prebuild.sh
      - name: Test
        run: flutter test --coverage
      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Build
        run: flutter build web --web-renderer canvaskit
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_SWISS_TRAVEL_36188 }}"
          projectId: swiss-travel-36188
          channelId: live
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels
  run-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    name: Run Flutter tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Clone dependencies
        run: |
          git clone https://gaetschwartz:${{ secrets.ACCESS_TOKEN }}@github.com/gaetschwartz/utils.git
          git clone https://gaetschwartz:${{ secrets.ACCESS_TOKEN }}@github.com/vincenttarrit/vibration.git
        working-directory: ../
      - name: Get latest Flutter release
        id: release_json
        run: echo "::set-output name=json::$(curl -s "https://storage.googleapis.com/flutter_infra/releases/releases_linux.json" | jq -r ".current_release.${{ env.flutter_channel }}")"
      - name: Get Flutter from cache
        uses: actions/cache@v2
        with:
          path: |
            /opt/hostedtoolcache/flutter
            $HOME/.pub-cache
          key: ${{ runner.OS }}-flutter-cache-${{ steps.release_json.outputs.json }}
      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: dev
      - name: Get git infos
        id: git-data
        run: |
          echo "::set-output name=hash::$(git rev-parse --short "$GITHUB_SHA")"
          echo "::set-output name=msg::$(git log -1 --pretty=format:"%s")"
          echo "::set-output name=count::$(git rev-list --count HEAD)"
      - name: Get dependencies
        run: flutter packages get
      - name: Pre-build configuration
        env:
          TZ: Europe/Zurich
          COMMIT_COUNT: ${{ steps.git-data.outputs.count }}
          GIT_MSG: ${{ steps.git-data.outputs.msg }}
          GIT_HASH: ${{ steps.git-data.outputs.hash }}
        run: bash CI/prebuild.sh

      - name: Build
        if: env.build_android == 'true'
        run: flutter build apk --build-number ${{ steps.git-data.outputs.count }}

      - name: Create Release
        if: env.build_android == 'true'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ci-build-${{ steps.git-data.outputs.count }}
          release_name: |
            CI Build #${{ steps.git-data.outputs.count }}
          body: |
            *This is an automated CI build for ${{ steps.git-data.outputs.hash }}.*

            `${{ steps.git-data.outputs.msg }}`
          draft: false
          prerelease: true
      - name: Upload Release Asset
        if: env.build_android == 'true'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/app/outputs/flutter-apk/app-release.apk
          asset_name: swift-travel-${{ steps.git-data.outputs.count }}.apk
          asset_content_type: application/vnd.android.package-archive
